/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package amvrutinario;

import amvrutinario.dto.Impresion;
import amvrutinario.dto.ProyectoDto;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.Image;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.ColumnText;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.PdfStamper;
import java.awt.Desktop;
import java.awt.Font;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Daniel
 */
public class Imprimir extends javax.swing.JPanel {

    private ProyectoDto proyectoDto;

    /**
     * Creates new form Imprimir
     */
    public Imprimir() {
        initComponents();
    }

    Imprimir(ProyectoDto proyecto) {
        this.proyectoDto = proyecto;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooserLogo = new javax.swing.JFileChooser();
        jLabel2 = new javax.swing.JLabel();
        imprimir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        numeroInforme = new javax.swing.JFormattedTextField();
        contratoNumero = new javax.swing.JTextField();
        fechaImpresion = new com.toedter.calendar.JDateChooser();
        buscarLogo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        logoPreview = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(700, 400));
        setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Información del documento a imprimir");
        add(jLabel2);
        jLabel2.setBounds(210, 20, 330, 20);

        imprimir.setText("Imprimir");
        imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirActionPerformed(evt);
            }
        });
        add(imprimir);
        imprimir.setBounds(300, 260, 160, 23);

        jLabel3.setText("Fecha de impresion:");
        add(jLabel3);
        jLabel3.setBounds(210, 60, 180, 30);

        jLabel4.setText("Informe número:");
        add(jLabel4);
        jLabel4.setBounds(210, 100, 180, 30);

        jPanel1.setPreferredSize(new java.awt.Dimension(700, 400));
        jPanel1.setLayout(null);

        jLabel5.setText("Contrato:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(210, 140, 180, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Información del documento a imprimir");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(210, 20, 330, 20);

        jButton2.setText("Imprimir");
        jPanel1.add(jButton2);
        jButton2.setBounds(300, 260, 160, 23);

        jLabel7.setText("Fecha de impresion:");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(210, 60, 180, 30);

        jLabel8.setText("Informe número:");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(210, 100, 180, 30);

        numeroInforme.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jPanel1.add(numeroInforme);
        numeroInforme.setBounds(390, 100, 70, 30);
        jPanel1.add(contratoNumero);
        contratoNumero.setBounds(390, 140, 150, 30);

        fechaImpresion.setDateFormatString("EEE, d MMM yyyy");
        fechaImpresion.setFocusable(false);
        jPanel1.add(fechaImpresion);
        fechaImpresion.setBounds(390, 60, 150, 30);

        buscarLogo.setText("Buscar");
        buscarLogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarLogoActionPerformed(evt);
            }
        });
        jPanel1.add(buscarLogo);
        buscarLogo.setBounds(390, 180, 150, 30);

        jLabel1.setText("Logo");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(210, 184, 180, 20);
        jPanel1.add(logoPreview);
        logoPreview.setBounds(10, 70, 160, 130);

        add(jPanel1);
        jPanel1.setBounds(0, 0, 700, 400);

        jLabel9.setText("Contrato número:");
        add(jLabel9);
        jLabel9.setBounds(210, 140, 180, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void imprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirActionPerformed
        Impresion datosImpresion = new Impresion();
        datosImpresion.setFechaImpresion(fechaImpresion.getDate());
        datosImpresion.setNumeroContrato(contratoNumero.getText());
        datosImpresion.setNumeroInforme(numeroInforme.getText());

        if (Objects.nonNull(img)) {
            datosImpresion.setUrlImagen(img.getAbsolutePath());
        }
        this.proyectoDto.setImpresion(datosImpresion);
        PDF pdf = new PDF("prueba", this.proyectoDto);
        pdf.imprimir();
    }//GEN-LAST:event_imprimirActionPerformed

    private void buscarLogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarLogoActionPerformed
        int res;
        FileNameExtensionFilter formato = new FileNameExtensionFilter("JPG y PNG", "jpg", "png");
        jFileChooserLogo.setFileFilter(formato);

        res = jFileChooserLogo.showOpenDialog(null);

        if (JFileChooser.APPROVE_OPTION == res) {
            try {
                img = jFileChooserLogo.getSelectedFile();
                ImageIcon logo = new ImageIcon(img.toString());
                Icon icono = new ImageIcon(logo.getImage().getScaledInstance(200, 200, 1));
                logoPreview.setIcon(icono);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al abrir" + e.getMessage());
            }
        }
    }//GEN-LAST:event_buscarLogoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarLogo;
    private javax.swing.JTextField contratoNumero;
    private com.toedter.calendar.JDateChooser fechaImpresion;
    private javax.swing.JButton imprimir;
    private javax.swing.JButton jButton2;
    private javax.swing.JFileChooser jFileChooserLogo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel logoPreview;
    private javax.swing.JFormattedTextField numeroInforme;
    // End of variables declaration//GEN-END:variables

    private File img;

    public void manipulatePdf(String src, String dest) throws IOException, DocumentException {
        PdfReader reader = new PdfReader(src);
        int n = reader.getNumberOfPages();
        PdfStamper stamper = new PdfStamper(reader, new FileOutputStream(dest));
        PdfContentByte pagecontent;
        for (int i = 0; i < n;) {
            pagecontent = stamper.getOverContent(++i);
            ColumnText.showTextAligned(pagecontent, Element.ALIGN_RIGHT,
                    new Phrase(String.format("page %s of %s", i, n)), 559, 806, 0);
        }
        stamper.close();
        reader.close();
    }

    private void imprimir() {
        com.itextpdf.text.Font arial = FontFactory.getFont("Arial", 10, Font.PLAIN, BaseColor.BLACK);
        Document documento = new Document(PageSize.A4, 40, 40, 10, 40);
        PdfWriter writer = null;
        try {
            writer = PdfWriter.getInstance(documento, new FileOutputStream("./prueba.pdf"));
        } catch (FileNotFoundException | DocumentException ex) {
            ex.getMessage();
        }
        documento.addTitle("Impresion AMV");
        documento.open();
        //Cabecera 
        PdfPTable cabecera = new PdfPTable(3);
        cabecera.setWidthPercentage(110);
        cabecera.getDefaultCell().setPadding(2);
        try {
            cabecera.setWidths(new float[]{20, 60, 30});
        } catch (DocumentException ex) {
            Logger.getLogger(Imprimir.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if (Objects.nonNull(img)) {
                Image imagen = Image.getInstance(img.getAbsolutePath());
                imagen.setAlignment(Image.ALIGN_CENTER);
                imagen.scaleAbsolute(60, 80);
                PdfPCell cellImagen = new PdfPCell(imagen);
                cellImagen.setHorizontalAlignment(Element.ALIGN_CENTER);
                cellImagen.setRowspan(5);
                cabecera.addCell(cellImagen);
            } else {
                PdfPCell vacio = new PdfPCell();
                vacio.setRowspan(5);
                cabecera.addCell(vacio);
            }
        } catch (IOException | DocumentException ex) {
            ex.getMessage();
        }

        cabecera.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
        cabecera.addCell("Ministerio de Transporte");
        Phrase paginacion = new Phrase(String.format("page %s of %s", String.valueOf(writer.getCurrentPageNumber()), String.valueOf(writer.getPageNumber())));
        paginacion.getFont().setSize(8);

        cabecera.addCell(paginacion);
        cabecera.addCell("INSTITUTO NACIONAL DE VÌAS");
        cabecera.addCell("");
        cabecera.addCell("SECRETARÍA GENERAL TÉCNICA");
        if (Objects.nonNull(fechaImpresion.getDate())) {
            SimpleDateFormat formatFecha = new SimpleDateFormat("EEE, d MMM yyyy");
            Phrase fecha = new Phrase("Fecha: " + formatFecha.format(fechaImpresion.getDate()));
            fecha.getFont().setSize(8);
            cabecera.addCell(fecha);
        } else {
            cabecera.addCell("");
        }
        cabecera.addCell("TERRITORIAL NORTE DE SANTANDER");
        if (!numeroInforme.getText().isEmpty()) {
            Phrase nro_infome = new Phrase("Informe No: " + numeroInforme.getText());
            nro_infome.getFont().setSize(8);
            cabecera.addCell(nro_infome);
        } else {
            cabecera.addCell("");
        }
        PdfPCell cellAMV = new PdfPCell(new Phrase("INFORME DE AMV G4"));
        cellAMV.setBackgroundColor(BaseColor.LIGHT_GRAY);
        cellAMV.setHorizontalAlignment(Element.ALIGN_CENTER);

        cabecera.addCell(cellAMV);
        if (!contratoNumero.getText().isEmpty()) {
            Phrase nro_contrato = new Phrase("Contrato No: " + contratoNumero.getText());
            nro_contrato.getFont().setSize(8);
            cabecera.addCell(nro_contrato);
        } else {
            cabecera.addCell("");
        }

        PdfPCell cellTemp = new PdfPCell(new Phrase("EJECUTAR ES NUESTRA RUTA"));
        cellTemp.setHorizontalAlignment(Element.ALIGN_CENTER);
        cellTemp.setColspan(3);
        cabecera.addCell(cellTemp);

        try {
            documento.add(cabecera);
        } catch (DocumentException ex) {
            ex.getMessage();
        }

        Paragraph saltolinea1 = new Paragraph();
        saltolinea1.add("\n");
        try {
            documento.add(saltolinea1);
        } catch (DocumentException ex) {
            Logger.getLogger(Imprimir.class.getName()).log(Level.SEVERE, null, ex);
        }

        Paragraph titulo = new Paragraph();
        titulo.setAlignment(Paragraph.ALIGN_CENTER);
        titulo.setFont(FontFactory.getFont("Verdana", 14, Font.BOLD, BaseColor.BLACK));
        titulo.add("Generalidades");

        try {
            documento.add(titulo);
        } catch (DocumentException ex) {
            ex.getMessage();
        }
        try {
            documento.add(saltolinea1);
        } catch (DocumentException ex) {
            Logger.getLogger(Imprimir.class.getName()).log(Level.SEVERE, null, ex);
        }

        PdfPTable generalidades = new PdfPTable(2);
        generalidades.setWidthPercentage(100);
        generalidades.getDefaultCell().setPadding(5);
        try {
            generalidades.setWidths(new float[]{40, 60});
        } catch (DocumentException ex) {
            Logger.getLogger(Imprimir.class.getName()).log(Level.SEVERE, null, ex);
        }

        generalidades.addCell(new Phrase("NOMBRE DEL INGENIERO RESIDENTE:", arial));
        generalidades.addCell(new Phrase("RICHARD ALEJANDRO BECERRA ALVAREZ", arial));
        generalidades.addCell(new Phrase("NOMBRE DEL INGENIERO AUXILIAR:", arial));
        generalidades.addCell(new Phrase("RICARDO ALFONSO RINCON RODRIGUEZ", arial));
        generalidades.addCell(new Phrase("SECTOR ADMINISTRADO:", arial));
        generalidades.addCell(new Phrase("6604: La Lejia - Saravaena, Sector : La Lejia - Saravena, PR 00+0000 - PR 150+0000 ", arial));
        generalidades.addCell(new Phrase("DIRECCION OFICINA:", arial));
        generalidades.addCell(new Phrase("CARRERA 6 CON CALLE 5A, PR121+0180 CUBARA,BOYACA", arial));

        PdfPCell cellTel = new PdfPCell(new Phrase("TELEFONOS:", arial));
        cellTel.setColspan(2);
        cellTel.setHorizontalAlignment(Element.ALIGN_CENTER);
        generalidades.addCell(cellTel);
        generalidades.addCell(new Phrase("OFICINA:", arial));
        generalidades.addCell(new Phrase("5471304", arial));
        generalidades.addCell(new Phrase("CELULARES: ", arial));
        generalidades.addCell(new Phrase("3138523670 - 3138523670", arial));
        generalidades.addCell(new Phrase("FAX:", arial));
        generalidades.addCell(new Phrase("38523670", arial));
        generalidades.addCell(new Phrase("CORREO ELECTRONICO:", arial));
        generalidades.addCell(new Phrase("srdejo@gmail.com", arial));

        generalidades.addCell(new Phrase("ADMINISTRADOR DE MANTENIMIENTO VIAL:", arial));
        generalidades.addCell(new Phrase("", arial));
        generalidades.addCell(new Phrase("LONGITUD ASIGNADA: ", arial));
        generalidades.addCell(new Phrase("", arial));
        generalidades.addCell(new Phrase("PR INICIAL:", arial));
        generalidades.addCell(new Phrase("", arial));
        generalidades.addCell(new Phrase("PR FINAL:", arial));
        generalidades.addCell(new Phrase("", arial));
        generalidades.addCell(new Phrase("SECTOR: ", arial));
        generalidades.addCell(new Phrase("", arial));
        generalidades.addCell(new Phrase("TIPO TERRENO:", arial));
        generalidades.addCell(new Phrase("", arial));
        generalidades.addCell(new Phrase("CANTIDAD DE ASOCIADOS:", arial));
        generalidades.addCell(new Phrase("", arial));

        try {
            documento.add(generalidades);
        } catch (DocumentException ex) {
            ex.getMessage();
        }

        Paragraph titulo2 = new Paragraph();
        titulo2.setAlignment(Paragraph.ALIGN_CENTER);
        titulo2.setFont(FontFactory.getFont("Verdana", 14, Font.BOLD, BaseColor.BLACK));
        titulo2.add("INFORME DE LAS ACTIVIDADES");

        try {
            documento.add(titulo2);
        } catch (DocumentException ex) {
            ex.getMessage();
        }

        try {
            documento.add(saltolinea1);
        } catch (DocumentException ex) {
            Logger.getLogger(Imprimir.class.getName()).log(Level.SEVERE, null, ex);
        }

        PdfPTable actividades = new PdfPTable(4);
        actividades.setWidthPercentage(100);
        actividades.getDefaultCell().setPadding(5);
        try {
            actividades.setWidths(new float[]{20, 30, 30, 30});
        } catch (DocumentException ex) {
            Logger.getLogger(Imprimir.class.getName()).log(Level.SEVERE, null, ex);
        }

        actividades.addCell(new Phrase("Tipo Actividad:", arial));
        actividades.addCell(new Phrase("Bacheo (carreteras pavimentadas)", arial));
        actividades.addCell(new Phrase("Tipo Informe: ", arial));
        actividades.addCell(new Phrase("Diario", arial));

        actividades.addCell(new Phrase("Cantidad de obra ejecutada:", arial));
        actividades.addCell(new Phrase("3 diario", arial));
        actividades.addCell(new Phrase("Rendimiento esperado ", arial));
        actividades.addCell(new Phrase("3 diario/hH", arial));

        PdfPCell cellObservacion = new PdfPCell(new Phrase("Observaciones: bla bla bla", arial));
        cellObservacion.setColspan(4);
        cellObservacion.setHorizontalAlignment(Element.ALIGN_CENTER);
        actividades.addCell(cellObservacion);

        try {
            documento.add(actividades);
        } catch (DocumentException ex) {
            ex.getMessage();
        }

        try {
            documento.add(saltolinea1);
        } catch (DocumentException ex) {
            Logger.getLogger(Imprimir.class.getName()).log(Level.SEVERE, null, ex);
        }

        PdfPTable firmas = new PdfPTable(4);
        firmas.setWidthPercentage(100);
        firmas.getDefaultCell().setPadding(5);
        try {
            firmas.setWidths(new float[]{25, 25, 25, 25});
        } catch (DocumentException ex) {
            Logger.getLogger(Imprimir.class.getName()).log(Level.SEVERE, null, ex);
        }
        PdfPCell dosColBlanco = new PdfPCell(new Phrase(" ", arial));
        dosColBlanco.setColspan(2);
        firmas.addCell(dosColBlanco);
        firmas.addCell(dosColBlanco);

        PdfPCell dirOficina = new PdfPCell(new Phrase("Dirección de la oficina", arial));
        dirOficina.setColspan(2);
        dirOficina.setHorizontalAlignment(Element.ALIGN_CENTER);
        firmas.addCell(dirOficina);

        PdfPCell nombreResidente = new PdfPCell(new Phrase("RICHARD ALEJANDRO BECERRA ALVAREZ", arial));
        nombreResidente.setColspan(2);
        nombreResidente.setHorizontalAlignment(Element.ALIGN_CENTER);
        firmas.addCell(nombreResidente);

        firmas.addCell(new Phrase("correo electónico:   ", arial));
        firmas.addCell(new Phrase("número de contacto:   ", arial));

        PdfPCell cargo = new PdfPCell(new Phrase("Cargo del Ingeniero Residente", arial));
        cargo.setColspan(2);
        cargo.setHorizontalAlignment(Element.ALIGN_CENTER);
        firmas.addCell(cargo);

        try {
            documento.add(firmas);
        } catch (DocumentException ex) {
            ex.getMessage();
        }
        //Cerramos el documento.
        documento.close();
        //Cerramos el writer.
        writer.close();

        File file = new File("./prueba.pdf");

        try {
            Desktop.getDesktop().open(file);
        } catch (IOException ex) {
            Logger.getLogger(Imprimir.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
